{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Effect": "Allow",
			"Action": [
				"*"
			],
			"Resource": "arn:aws:iam::*:role/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
		},
		{
			"Effect": "Allow",
			"Action": "iam:PassRole",
			"Resource": "arn:aws:iam::*:role/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-ecs_*",
			"Condition": {
				"StringEquals": {
					"iam:PassedToService": "ecs-tasks.amazonaws.com"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"iam:CreatePolicy",
				"iam:TagPolicy"
			],
			"Resource": "arn:aws:iam::*:policy/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*",
			"Condition": {
				"StringEquals": {
					"aws:RequestTag/ManagedBy": "Terraform"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"*"
			],
			"Resource": "arn:aws:iam::*:policy/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"secretsmanager:DescribeSecret",
				"secretsmanager:GetSecretValue",
				"secretsmanager:ListSecretVersionIds",
				"secretsmanager:GetResourcePolicy",
				"secretsmanager:CreateSecret",
				"secretsmanager:TagResource",
				"secretsmanager:PutSecretValue",
				"secretsmanager:DeleteSecret"
			],
			"Resource": "arn:aws:secretsmanager:*:*:secret:${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:DescribeAvailabilityZones",
				"ec2:DescribeVpcs",
				"ec2:DescribeSubnets",
				"ec2:DescribeInternetGateways",
				"ec2:DescribeRouteTables",
				"ec2:DescribeSecurityGroups",
				"ec2:DescribeVpcAttribute",
				"ec2:DescribeNetworkInterfaces",
				"ec2:DescribePrefixLists"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:CreateVpc",
				"ec2:CreateTags",
				"ec2:CreateSubnet",
				"ec2:CreateInternetGateway",
				"ec2:CreateSecurityGroup",
				"ec2:CreateRouteTable",
				"ec2:CreateRoute"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ec2:AuthorizeSecurityGroupEgress",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:AssociateRouteTable",
				"ec2:DisassociateRouteTable",
				"ec2:AttachInternetGateway",
				"ec2:ModifyVpcAttribute",
				"ec2:ModifySubnetAttribute",
				"ec2:RevokeSecurityGroupEgress",
				"ec2:DeleteSecurityGroup",
				"ec2:DeleteRouteTable",
				"ec2:DeleteSubnet",
				"ec2:DetachInternetGateway",
				"ec2:DeleteInternetGateway",
				"ec2:DeleteVpc"
			],
			"Resource": [
				"*"
			],
			"Condition": {
				"StringEquals": {
					"ec2:ResourceTag/Project": "${aws:PrincipalTag/Project}",
					"ec2:ResourceTag/Environment": "${aws:PrincipalTag/Environment}"
				}
			}
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:DescribeLoadBalancers",
				"elasticloadbalancing:DescribeLoadBalancerAttributes",
				"elasticloadbalancing:DescribeListeners",
				"elasticloadbalancing:DescribeRules",
				"elasticloadbalancing:DescribeTargetGroups",
				"elasticloadbalancing:DescribeTargetGroupAttributes",
				"elasticloadbalancing:DescribeTags",
				"elasticloadbalancing:DescribeListenerAttributes"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"elasticloadbalancing:AddTags",
				"elasticloadbalancing:CreateTargetGroup",
				"elasticloadbalancing:CreateListener",
				"elasticloadbalancing:CreateLoadBalancer",
				"elasticloadbalancing:ModifyTargetGroupAttributes",
				"elasticloadbalancing:ModifyLoadBalancerAttributes",
				"elasticloadbalancing:ModifyListenerAttributes",
				"elasticloadbalancing:DeleteListener",
				"elasticloadbalancing:DeleteTargetGroup",
				"elasticloadbalancing:DeleteLoadBalancer"
			],
			"Resource": [
				"arn:aws:elasticloadbalancing:*:*:loadbalancer/app/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*",
				"arn:aws:elasticloadbalancing:*:*:targetgroup/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*",
				"arn:aws:elasticloadbalancing:*:*:listener/app/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
			]
		},
		{
			"Effect": "Allow",
			"Action": [
				"ecs:DescribeClusters",
				"ecs:DescribeServices",
				"ecs:DescribeTaskDefinition",
				"ecs:DeregisterTaskDefinition"
			],
			"Resource": "*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"ecs:ListClusters",
				"ecs:ListTagsForResource",
				"ecs:TagResource",
				"ecs:createService",
				"ecs:createCluster",
				"ecs:deleteService",
				"ecs:deleteCluster",
				"ecs:updateService",
				"ecs:updateCluster",
				"ecs:RegisterTaskDefinition"
			],
			"Resource": [
				"arn:aws:ecs:*:*:cluster/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*",
				"arn:aws:ecs:*:*:service/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*",
				"arn:aws:ecs:*:*:task-definition/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
			]
		},
		{
			"Effect": "Allow",
			"Action": [
				"ecr:DescribeRepositories",
				"ecr:ListTagsForResource",
				"ecr:DeleteRepository",
				"ecr:CreateRepository",
				"ecr:TagResource"
			],
			"Resource": "arn:aws:ecr:*:*:repository/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}-*"
		},
		{
			"Effect": "Allow",
			"Action": [
				"kms:RetireGrant"
			],
			"Resource": "*"
		},
        {
            "Sid": "AllowDescribeLogGroupsForDiscovery",
            "Effect": "Allow",
            "Action": "logs:DescribeLogGroups",
            "Resource": "arn:aws:logs:*:*:log-group:*"
        },
        {
            "Sid": "AllowManageSpecificECSLogGroup",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogGroup",
                "logs:PutRetentionPolicy",
                "logs:DeleteLogGroup",
                "logs:TagResource",
                "logs:UntagResource",
                "logs:ListTagsLogGroup",
				"logs:ListTagsForResource"
            ],
            "Resource": "arn:aws:logs:*:*:log-group:/ecs/${aws:PrincipalTag/Project}-${aws:PrincipalTag/Environment}*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "acm:RequestCertificate",
                "acm:DescribeCertificate",
                "acm:ListTagsForCertificate",
                "acm:AddTagsToCertificate",
                "acm:DeleteCertificate"
            ],
            "Resource": "*"
        },
		{
			"Sid": "AllowListHostedZones",
			"Effect": "Allow",
			"Action": [
			  "route53:ListHostedZones",
			  "route53:ListHostedZonesByName",
			  "route53:GetHostedZone",
			  "route53:ListTagsForResource"
			],
			"Resource": "*"
		  },
		  {
			"Sid": "AllowGetChangeStatusAfterUpdate",
			"Effect": "Allow",
			"Action": "route53:GetChange",
			"Resource": "arn:aws:route53:::change/*"
		  },
		  {
			"Sid": "AllowListResourceRecordSets",
			"Effect": "Allow",
			"Action": "route53:ListResourceRecordSets",
			"Resource": "arn:aws:route53:::hostedzone/*"
		  },
		  {
			"Sid": "AllowManageRecordsInTaggedHostedZone",
			"Effect": "Allow",
			"Action": [
			  "route53:ChangeResourceRecordSets"
			],
			"Resource": "arn:aws:route53:::hostedzone/*",
			"Condition": {
			  "StringEquals": {
				"aws:ResourceTag/Project": "${aws:PrincipalTag/Project}",
				"aws:ResourceTag/Environment": "${aws:PrincipalTag/Environment}",
				"aws:ResourceTag/ManagedBy": "Terraform"
			  }
			}
		  }
	]
}